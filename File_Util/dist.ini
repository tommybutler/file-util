name    = File-Util
author  = Tommy Butler
license = Perl_5
copyright_holder = Tommy Butler
is_trial = 0

[Meta::Contributors]
contributor = John Fields <jfields.cpan.org@spammenot.com>
contributor = BrowserUk <browseruk@cpan.org>
contributor = Ricardo SIGNES <rjbs@cpan.org>
contributor = Matt S Trout <perl-stuff@trout.me.uk>
contributor = Nicholas Perez <nperez@cpan.org>
contributor = David Golden <dagolden@cpan.org>

[@Filter]
bundle = @Basic
remove = ExtraTests

[RunExtraTests]

[ModuleBuild]

[AutoVersion]
major = 4

[PkgVersion]
[PodVersion]
[MetaProvides::Package]
[MinimumPerl]
[MetaConfig]
[MetaJSON]
[MetaResources]
homepage          = https://github.com/tommybutler/file-util/wiki
bugtracker.web    = https://rt.cpan.org/Dist/Display.html?Name=File%3A%3AUtil
bugtracker.mailto = bug-File-Util@rt.cpan.org
repository.url    = git://github.com/tommybutler/file-util.git
repository.web    = https://github.com/tommybutler/file-util
repository.type   = git

[ReportVersions::Tiny]

[Test::LocalBrew]
brews = perl-5.8.9
brews = perl-5.10.1
brews = perl-5.12.5
brews = perl-5.14.4
brews = perl-5.16.3
brews = perl-5.17.10
brews = perl-5.18.0

[@TestingMania]
disable = Test::Portability ; won't accept options; wrote my own version instead
disable = Test::EOL ; some of the tests fail their own EOL test; strange
disable = Test::Pod::LinkCheck ; buggy, causes too many failures
disable = Test::MinimumVersion ; I do this myself, via the Perlbrew testing

[Test::PodSpelling]
stopwords = AND'ed
stopwords = ascii
stopwords = bitmask
stopwords = BrowserUk
stopwords = BLOCKEX
stopwords = CIFS
stopwords = conf
stopwords = dat
stopwords = dbitmask
stopwords = ebcdic
stopwords = EBCDIC
stopwords = EPOC
stopwords = failsafe
stopwords = FIFOs
stopwords = Github
stopwords = html
stopwords = inodes
stopwords = listrefs
stopwords = NFS
stopwords = oct
stopwords = onfail
stopwords = SIGNES
stopwords = SMB
stopwords = Solaris
stopwords = SOLARIS
stopwords = subpattern
stopwords = subref
stopwords = subrefs
stopwords = syntaxes
stopwords = trunc
stopwords = txt
stopwords = unicode
stopwords = VMS
stopwords = vtab
stopwords = benchmarking
stopwords = merchantability
stopwords = lexically

[CheckChangesHasContent]
[TestRelease]
[ConfirmRelease]

[Signature]
sign = always

; The plugin below is ::Extra cool, but a little buggy; I only use it sometimes
; and it can't be used at the same time as the more mainstream Test::Kwalitee
; plugin from chromatic (above)
;
;[Test::Kwalitee::Extra]
;arg = !valid_signature

[AutoPrereqs]
; reminder: double check that all prereqs have been detected!

; regarding prereqs section syntax (taken from dzil source code) -
; (Build|Test|Runtime|Configure|Develop)?(Requires|Recommends|Suggests|Conflicts)

[Prereqs / TestRequires]
AutoLoader = 0
Config = 0
Cwd = 0
Exporter = 0
ExtUtils::MakeMaker = 0
Fcntl = 0
File::Temp = 0
Module::Build = 0
Test = 0
Test::More = 0
Test::NoWarnings = 0
Scalar::Util = 0

[Prereqs / Recommends]
Unicode::UTF8 = 0.58 ; this will eventually be utilized as an optimization

[Prereqs / DevelopRequires]
Dist::Zilla = 0
Perl::Critic = 0
Perl::Critic::Lax = 0
Devel::Cover = 0
Test::Fatal = 0

;[Prereqs / DevelopRecommends]
;Devel::NYTProf = 0

