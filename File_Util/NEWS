NEWS for File::Util

Thu Jan 10 10:07:14 CST 2013
   The latest release (v 4.0) brings many fixes to the table.  The fixes
   affect nearly all platforms and architectures.  Users are encouraged to
   upgrade, as this is not merely a features-added release.

   Fundamental changes in the internal layout of File::Util have been
   made; it isn't a single module file anymore.  This doesn't affect the
   end user.  To the user, this change is completely transparent and does
   not affect their programs or libraries that use File::Util.

   This change is a step forward in the stated goal of File::Util to bring
   a more "modern" (as in Modern::Perl) interface to the user while
   preserving compatibility with current syntax.

   Further, the test suite has been updated to make use of Test::More and
   Test::NoWarnings across the board, bringing better "kwalitee" (as in
   CPANTS) to you and to OS package maintainers for various platforms out
   there.

   Also in this release we move to auto-versioning a la Dist::Zilla plugins
   PkgVersion and AutoVersion (thank you to the authors of those plugins)

   Re: flock() on Solaris -
   Updates have been made to the test suite so flock() problems on
   Solaris don't incorrectly cause test results to appear to have failed
   on that single platform.  Solaris users should be aware of the problems
   with discretionary locks on their platform.  It is not only Perl
   that experiences issues, but Python, Ruby, and others.  The problem
   is specifically that Solaris will happily lock a file, but will very
   often NOT unlock it until the process has exited.  This causes all
   kinds of problems.  The documentation for File::Util will be updated
   in order to advise Solaris users of opening the same file more than
   once during the lifetime of a process.

Mon Dec 31 23:25:00 CST 2012
   This latest release (v 3.33) is not a feature release.  It's a
   documentation update, a few bug fixes, several code optimizations, and
   code cleanup.  Mostly, it is a great step forward in the CPAN package
   itself.  Read on for more details...

   Please have a look at the CHANGES file, because there have been and will
   continue to be big changes/improvements to File::Util both in terms of the
   code itself and the CPAN distribution package releases.

   File::Util is now migrated to git and uses Dist::Zilla to create a
   build environment that works better in windows platforms.  This
   brought about the moving the content of Util.pod back into Util.pm
   which does have its benefits, but makes the actual file size larger
   than I want; I'll probably soon make a cookbook and slim down the main
   documentation a bit, since it's very exhaustive, and bring things back
   into the file sizes I like to see.  Compile times and run times have
   not been affected by the POD move.

   File::Util now must pass Perl::Critic tests as well, therefore the
   so-called CPANTS "kwalitee" of the code has been markedly increased.

   File::Util will be signed with a Module::Signature from now on, as
   long as this doesn't introduce failures in the build/test phases for
   CPAN testers and end users alike.

   These changes are part of an overall effort to "keep moving forward",
   make things better, and also make the distribution compliant with
   Fedora and Debian packaging standards.  File::Util already has a
   maintained package for Ubuntu.

   There's a writeup of my most recent reflections on File::Util that I
   posted on Perl Monks which explains some of my new goals for the
   distribution, the code, and the future of File::Util.  You can read it at
   http://www.perlmonks.org/?node_id=1011110

   Happy new year!
      - Tommy Butler
